{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "Admin username on all VMs."
			}
		},
		"sshKeyData": {
			"type": "string",
			"metadata": {
				"description": "SSH rsa public key file as a string."
			}
		},
		"coreOSType": {
			"type": "string",
			"defaultValue": "CoreOS-Stable",
			"allowedValues": [
				"CoreOS-Stable",
				"CoreOS-Beta"
			]
		},
		"clusterName": {
			"type": "string",
			"defaultValue": "my-kub-cluster02",
			"metadata": {
				"description": "cluster name"
			}
		},
		"mastersCount": {
			"type": "int",
			"defaultValue": 5,
			"metadata": {
				"description": "Masters count (each runs etcd, each on a storage account, choose accordingly)"
			},
			"maxValue": 10
		},
		"nodesPerGroupCount": {
			"type": "int",
			"defaultValue": 1,
			"metadata": {
				"description": "Node count per node-group, max allowed 255"
			},
			"maxValue": 255
		},
		"nodesGroupCount": {
			"type": "int",
			"defaultValue": 1	,
			"metadata": {
				"description": "node group count (each is an availbility  set)"
			},
			"maxValue": 255
		},

		"nodesVMSku": {
			"type": "string",
			"defaultValue": "Standard_A1",
			"metadata": {
				"description": "Size of VMs in the node group VM Scale Set."
			}
		},


		"mastersVMSku": {
			"type": "string",
			"defaultValue": "Standard_A1",
			"metadata": {
				"description": "Size of VMs in the VM Scale Set."
			}
		},
		"nodesSACount": {
			"type": "int",
			"defaultValue": 5,
			"metadata": {
				"description": "Storage accounts used by kuberenetes nodes vms (distributed on)"
			},
			"maxValue": 35
		},
		"mastersStorageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_ZRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "Storage Account type for nodes VM"
			}
		},
		"nodesStorageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_ZRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "Storage Account type by nodes VM"
			}
		}
	},
	"variables": {
		"baseTemplatesUri": "https://raw.githubusercontent.com/khenidak/kubernetes-azure/master/",
		"templateCreateMasters": "create-masters.json",
		"templateCreateNodeGroup": "create-node-group.json",
		"templateCreateNode" : "create-node.json",
		
		"clusterNameClean": "[replace(parameters('clusterName'),'-','')]",
		"constAddonMasterStorageAccountPrefix": "m",
		"mastersStorageAccountprefix": "[ concat(variables('constAddonMasterStorageAccountPrefix') ,   variables('clusterNameClean') ) ]",
		"mastersSALoop": "mastersSALoop",
		"constAddonNodeStorageAccountPrefix": "n",
		"nodesStorageAccountprefix": "[ concat(variables('constAddonNodeStorageAccountPrefix') ,   variables('clusterNameClean') ) ]",
		"nodesSALoop": "nodeSALoop",
		"clusterVNETName": "[concat(  variables('clusterNameClean') , '-vnet')]",
		"mastersSubnetName": "masters-net",
		"clusterVnetSpaceMain": "10.0.0.0/8",
		"mastersSubnetSpace": "10.0.0.0/24",
		"VNETRoutingTableName": "[concat(variables('clusterNameClean'), '-routing-table' )]",
		"clusterPipName": "[concat(parameters('clusterName'), '-pip' )]",
		"clusterLBName": "[concat(parameters('clusterName'), '-lb' )]",
		"clusterLBNameMaster": "[concat(variables('clusterLBName'), '-masters' )]",
		
		"sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]",
		"computeApiVersion": "2016-03-30",
		"networkApiVersion": "2016-03-30",
		"storageApiVersion": "2015-06-15",
		"resourceApiVersion": "2015-01-01"
	},
	"resources": [
		{
			"comments": "Storage accounts used by master, one each",
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat( variables('mastersStorageAccountprefix'), copyIndex() )]",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('storageApiVersion')]",
			"copy": {
				"name": "[variables('mastersSALoop')]",
				"count": "[parameters('mastersCount')]"
			},
			"properties": {
				"accountType": "[parameters('mastersStorageAccountType')]"
			}
		},
		{
			"comments": "Storage accounts used by nodes, distributed",
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat( variables('nodesStorageAccountprefix'), copyIndex() )]",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('storageApiVersion')]",
			"copy": {
				"name": "[variables('nodesSALoop')]",
				"count": "[parameters('nodesSACount')]"
			},
			"properties": {
				"accountType": "[parameters('nodesStorageAccountType')]"
			}
		},
		{
			"comments": "Routing table - all subnet",
			"type": "Microsoft.Network/routeTables",
			"apiVersion": "[variables('networkApiVersion')]",
			"name": "[variables('VNETRoutingTableName')]",
			"location": "[resourceGroup().location]",
			"tags": {
				"displayName": "vnet routing table"
			},
			"properties": {
				"routes": []
			}
		},
		{
			"comments": "Cluster vnet",
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[variables('clusterVNETName')]",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('networkApiVersion')]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": ["[variables('clusterVnetSpaceMain')]"]
				},
				"subnets": [
					{
						"name": "[variables('mastersSubnetName') ]",
						"properties": {
								"addressPrefix": "[variables('mastersSubnetSpace')]",
								"routeTable": {"id": "[resourceId('Microsoft.Network/routeTables/',  variables('VNETRoutingTableName'))]"}
							}
					}
				]
			}
			
		},
		{
			"comments": "public ip for the cluster, attached to the edge LB",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('clusterPipName')]",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('networkApiVersion')]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings": {
					"domainNameLabel": "[parameters('clusterName')]"
				}
			}
		},
		{
			"comments": "cluster edge loadbalancer",
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('clusterLBName')]",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('networkApiVersion')]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('clusterPipName'))]"
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "LoadBalancerFrontEnd",
						"properties": {
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses/',  variables('clusterPipName'))]"
							}
						}
					}
				],
				"backendAddressPools": [ {"name" : "mastersPool"}]
			}
		},
		{
			"comments": "internal LB - multi vip on LBs is currently in preview. once GA you can use one LB and NSG for everything",
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('clusterLBNameMaster')]",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('networkApiVersion')]",
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', variables('clusterVNETName') )]"
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "LoadBalancerFrontend-internal",
						"properties": {
							"subnet": {
								"id": "[  concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('clusterVNETName'), '/subnets/', variables('mastersSubnetName')) ]"
							},
							"privateIPAddress": "10.0.0.4",
							"privateIPAllocationMethod": "Static"
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "mastersPool"
					}
				],
				"inboundNatPools": []
			}
		},
		{
			"comments": "Creates all masters calls into sub templates",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('resourceApiVersion')]",
			"name": "create-masters",
			"dependsOn": [
				"[variables('mastersSALoop')]",
				"[concat('Microsoft.Network/loadbalancers/', variables('clusterLBNameMaster'))]",
				"[concat('Microsoft.Network/virtualNetworks/', variables('clusterVNETName')) ]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(variables('baseTemplatesUri'), variables('templateCreateMasters'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"computeApiVersion": {"value": "[variables('computeApiVersion')]"},
					"networkApiVersion": {"value": "[variables('networkApiVersion')]"},
					"storageApiVersion": {"value": "[variables('storageApiVersion')]"},
					"clusterName": {"value": "[parameters('clusterName')]"},
					"clusterNameClean": {"value": "[variables('clusterNameClean')]"},
					"clusterVNETName": {"value": "[variables('clusterVNETName')]"},
					"mastersSubnetName": {"value": "[variables('mastersSubnetName')]"},
					"clusterLBNameMaster": {"value": "[variables('clusterLBNameMaster')]"},
					"mastersCount": {"value": "[parameters('mastersCount')]"},
					"mastersStorageAccountprefix": {"value": "[variables('mastersStorageAccountprefix')]"},
					"sshKeyPath": {"value": "[variables('sshKeyPath')]"},
					"sshKeyData": {"value": "[parameters('sshKeyData')]"},
					"adminUsername": {"value": "[parameters('adminUsername')]"},
					"mastersVMSku": {"value": "[parameters('mastersVMSku')]"},
					"coreOSType" : {"value" : "[parameters('coreOSType')]"},
					"clusterLBName" : {"value" : "[variables('clusterLBName')]"}
				}
			}
		},	
		{
			"comments": "Creates node groups (each calls node creation)",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('resourceApiVersion')]",
			"name": "[concat('create-node-group-', copyIndex())]",
			"copy": {
				"name": "nodeGroupsLoop",
				"count": "[parameters('nodesGroupCount')]"
			},
			"dependsOn": [
				"Microsoft.Resources/deployments/create-masters",
				"[variables('nodesSALoop')]",
				"[concat('Microsoft.Network/virtualnetworks/', variables('clusterVNETName'))]",
				"[concat('Microsoft.Network/routeTables/',  variables('VNETRoutingTableName')) ]",
				"[concat('Microsoft.Network/loadBalancers/', variables('clusterLBName'))]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(variables('baseTemplatesUri'), variables('templateCreateNodeGroup'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"computeApiVersion": {"value": "[variables('computeApiVersion')]"},
					"networkApiVersion": {"value": "[variables('networkApiVersion')]"},
					"storageApiVersion": {"value": "[variables('storageApiVersion')]"},
					"resourceApiVersion": {"value": "[variables('resourceApiVersion')]"},
					
					"clusterName": {"value": "[parameters('clusterName')]"},
					"clusterNameClean": {"value": "[variables('clusterNameClean')]"},
					"clusterVNETName": {"value": "[variables('clusterVNETName')]"},
					"nodesStorageAccountprefix": {"value": "[variables('nodesStorageAccountprefix')]"},

					"nodesPerGroupCount": {"value": "[parameters('nodesPerGroupCount')]"},
					"nodeGroupIndex" : {"value": "[copyIndex()]"},
				    "nodesSACount":  {"value": "[parameters('nodesSACount')]"},
	
					"baseTemplatesUri" : {"value": "[variables('baseTemplatesUri')]"},
		 			"templateCreateNode" : {"value": "[variables('templateCreateNode')]"},

					"sshKeyPath": {"value": "[variables('sshKeyPath')]"},
					"sshKeyData": {"value": "[parameters('sshKeyData')]"},
					"adminUsername": {"value": "[parameters('adminUsername')]"},
					"nodesVMSku": {"value": "[parameters('nodesVMSku')]"},
					"coreOSType" : {"value" : "[parameters('coreOSType')]"},
					"VNETRoutingTableName" : {"value" : "[variables('VNETRoutingTableName')]"}
				}
			}
		}
	]
}