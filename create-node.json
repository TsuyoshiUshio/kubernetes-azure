{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"computeApiVersion": {"type": "string"},
		"networkApiVersion": {"type": "string"},
		"storageApiVersion": {"type": "string"},
		"clusterName": {"type": "string"},
		"clusterNameClean": {"type": "string"},
		"clusterVNETName": {"type": "string"},
		
		"nodesSACount": {"type": "int"},
		"nodesPerGroupCount": {"type": "int"},
		"nodesStorageAccountprefix": {"type": "string" },
		

		"sshKeyPath": {"type": "string"},
		"sshKeyData": {"type": "string"},
		"adminUsername": {"type": "string"},
		"nodesVMSku": {"type": "string"},
		"coreOSType": {"type": "string"},
		
		"nodeGroupIndex" : {"type": "int"},
		"nodeIndex" : {"type": "int"},

		"nodesGroupAvSetName" : {"type" : "string"}
		
	},
	"variables": {
		"CoreOs-Stable": {
			"publisher": "CoreOs",
			"offer": "CoreOs",
			"sku": "Stable",
			"version": "latest"
		},
		"CoreOs-Beta": {
			"publisher": "CoreOS",
			"offer": "CoreOs",
			"sku": "beta",
			"version": "latest"
		},
		 "imageReference": "[variables(parameters('coreOSType'))]",
		 "nodeSeq" : "[concat( parameters('nodeGroupIndex') , '-', parameters('nodeIndex') )]",
		 "subnetName" : "[concat('net-node-',  variables('nodeSeq'))]",
		 "nodeTargetSAPostfix" : "[mod( variables('nodeIndex') , variables('nodesSACount') )]"
	},
	"resources": [
		{
			"comments": "Routing table - attached to node subnet",
			"type": "Microsoft.Network/routeTables",
			"apiVersion": "[parameters('networkApiVersion')]",
			"name": "[concat('rtable-', variables('nodeSeq'))]",
			"location": "[resourceGroup().location]",
			"properties": {
				"routes": []
			}
		},
		{
			"comments" : "create subnet for the new node",
			"apiVersion": "[parameters('networkApiVersion')]",
			"type": "Microsoft.Network/virtualNetworks/subnets",
			"name": "[concat(parameters('clusterVNETName'), '/', variables('subnetName') )]",
			"dependsOn": [],
			"location": "[resourceGroup().location]",
			"properties": {"addressPrefix": "[concat('10.', add(parameters('nodeGroupIndex'), 3) , '.', parameters('nodeIndex'), '.0', '/24')]"}
		},
		{
			"comments" : "create a new nic for this node",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat('node-nic', nodeSeq)]",
			"apiVersion": "[parameters('networkApiVersion')]",
			"location": "[resourceGroup().location]",
			"dependsOn": ["[concat('Microsoft.Network/subnets/' , parameters('clusterVNETName'), '/', variables('subnetName') )]"],
			"properties": {
				"enableIPForwarding": true,
				"ipConfigurations": [
					{
						"name": "node-ip-config",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress": "[concat('10.', add(parameters('nodeGroupIndex'), 3), '.1.0')]",
							"subnet": {
								"id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('clusterVNETName'), '/subnets/',   variables('subnetName'))]"
							},
							"loadBalancerBackendAddressPools": []
						}
					}
				]
			}
		},
		{
			"comments": "Cluster node vm",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat('node-',  variables('nodeSeq'))]",
			"apiVersion": "[parameters('computeApiVersion')]",
			"location": "[resourceGroup().location]",
			"dependsOn": ["[concat('Microsoft.Network/networkInterfaces/' , 'node-nic', variables('nodeSeq') )]"],
			"properties": {
				"availabilitySet": { "id": "[resourceId('Microsoft.Compute/availabilitySets/', parameters('nodesGroupAvSetName')  )]"},
				"hardwareProfile": {"vmSize": "[parameters('nodesVMSku')]"},
				"osProfile": {
					"computerName": "[concat('node-', variables('nodeSeq'))]",
					"adminUsername": "[parameters('adminUsername')]",
					"linuxConfiguration": {
						"disablePasswordAuthentication": "true",
						"ssh": {
							"publicKeys": [
								{
									"path": "[parameters('sshKeyPath')]",
									"keyData": "[parameters('sshKeyData')]"
								}
							]
						}
					}
				},
				"storageProfile": {
					"imageReference": "[variables('imageReference')]",
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('https://', concat( parameters('nodesStorageAccountprefix'), variables('nodeTargetSAPostfix') ),  '.blob.core.windows.net/', variables('nodeSeq'),  ,'/', 'node--OsDisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [ {"id": "[resourceId('Microsoft.Network/networkInterfaces/', concat('node-nic', variables('nodeSeq')) )]"}]
				}
			}
		}
	]
}